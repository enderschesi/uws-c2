name: Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .
  ASSEMBLY_NAME: "Project Reboot.dll"

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix

permissions:
  contents: read

jobs:
  setup:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}
  
  debug:
    runs-on: windows-latest
    needs: setup
    if: "!contains(github.event.head_commit.message, '[BETA]') || !contains(github.event.head_commit.message, '[RELEASE]')"
    env:
      BUILD_CONFIGURATION: Debug

    steps:
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Upload Release Artifact
      uses: actions/upload-artifact@v3
      with:
        name: Release
        path: ${{env.SOLUTION_FILE_PATH}}/x64/${{env.BUILD_CONFIGURATION}}
        if-no-files-found: warn
        retention-days: 60
        
  beta:
    runs-on: windows-latest
    needs: setup
    if: "contains(github.event.head_commit.message, '[BETA]')"
    env:
      BUILD_CONFIGURATION: Release

    steps:
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Upload Release Artifact
      uses: actions/upload-artifact@v3
      with:
        name: Release
        path: ${{env.SOLUTION_FILE_PATH}}/x64/${{env.BUILD_CONFIGURATION}}/${{env.ASSEMBLY_NAME}}
        if-no-files-found: warn
        retention-days: 60
        
  release:
    runs-on: windows-latest
    needs: setup
    if: "contains(github.event.head_commit.message, '[RELEASE]')"
    env:
      BUILD_CONFIGURATION: Release

    steps:
    
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Upload Release Artifact
      uses: actions/upload-artifact@v3
      with:
        name: Release
        path: ${{env.SOLUTION_FILE_PATH}}/x64/${{env.BUILD_CONFIGURATION}}/${{env.ASSEMBLY_NAME}}
        if-no-files-found: warn
        retention-days: 60
